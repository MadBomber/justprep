name: release
permissions:
  contents: write

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  

defaults:
  run:
    shell: bash

jobs:
  all:
    name:
      All

    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-gnu
        - x86_64-apple-darwin
        - arm64-apple-darwin
        - x86_64-pc-windows-msvc
        - x86_64-unknown-linux-musl

        include:
        - target: x86_64-unknown-linux-musl
          os:     ubuntu-latest
          native: true
        - target: x86_64-apple-darwin
          os:     macos-latest
          native: true
        - target: arm64-apple-darwin
          os:     macos-latest
          native: true
        - target: x86_64-pc-windows-msvc
          os:     windows-latest
          native: true
        - target: aarch64-unknown-linux-gnu
          os:     ubuntu-latest
          native: true

    runs-on: ${{ matrix.os }}

    steps:
    # An issue with BSD Tar causes sporadic failures on macOS.
    # c.f https://github.com/actions/cache/issues/403
    - name: Install GNU Tar
      if: matrix.os == 'macos-latest'
      run: |
        brew install gnu-tar
        echo /usr/local/opt/gnu-tar/libexec/gnubin > $GITHUB_PATH

    - name: Update Ubuntu Packages
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update

    - name: Download source
      uses: actions/checkout@v2

    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1

    - name: Install Just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Toolchain Versions Used
      run: |
        just --version
        crystal --version

    - name: Build Justprep
      run: just static=true crystal/build

    - name: Package
      id: package
      if: startsWith(github.ref, 'refs/tags/')
      run: ./bin/package ${{github.ref}} ${{matrix.os}} ${{ matrix.target }}
      shell: bash

    - name: Publish
      uses: softprops/action-gh-release@v0.1.5
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: false
        files: ${{ steps.package.outputs.archive }}
        prerelease: ${{ steps.is_prerelease.outputs.value }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload binaries to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: crystal/bin/justprep
    #     asset_name: ${{ matrix.asset-name }}
    #     tag: ${{ github.ref }}

  # printInputs:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - run: |
  #       echo "Log level: ${{ github.event.inputs.logLevel }}"
  #       echo "Tags: ${{ github.event.inputs.tags }}" 
